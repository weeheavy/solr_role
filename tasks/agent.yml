---

- name: Solr | Agent installation | Install required packages
  package:
    name: "{{ solr_agents_required_libs }}"
    state: present
  when: solr_agents_required_libs is defined

- name: Solr | Agent installation | Ensure install path
  file:
    path: "{{ solr_installation_dir }}/{{ item.name }}"
    state: directory
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  with_items: '{{ solr_agents_config }}'

- name: Solr | Agent installation | Check if agent is installed
  stat:
    path: "{{ solr_installation_dir }}/{{ item.0.name }}/{{ item.1 | basename }}"
  register: agent_file_exists
  with_subelements:
    - "{{ solr_agents_config }}"
    - vm_opts

- name: Solr | Agent installation | Check agent version
  command: "cat {{ solr_installation_dir }}/{{ item.0.name }}/version.txt"
  register: agent_version_checked
  changed_when: false
  ignore_errors: true
  with_subelements:
    - "{{ solr_agents_config }}"
    - vm_opts

- name: Solr | Agent installation | Download agent
  get_url:
    dest: "{{ solr_tmp_basedir }}"
    url: "{{ item.download_url }}"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  register: agent_downloaded
  loop: "{{ solr_agents_config|flatten(levels=1) }}"
  loop_control:
    index_var: index
  when: solr_agents_force_reinstall or not agent_file_exists.results[index].stat.exists or item.version != agent_version_checked.results[index].stdout or agent_version_checked.results[index].failed


- name: Solr | Agent installation | Unarchive package
  unarchive:
    src: "{{ solr_tmp_basedir }}/{{ item.download_url | basename }}"
    dest: "{{ solr_installation_dir }}"
    remote_src: true
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    mode: 0755
  when: agent_downloaded.changed
  with_items: '{{ solr_agents_config }}'
  tags:
    - skip_ansible_lint

- name: Solr | Agent installation | Copy version number file
  template:
    src: "agents/version.txt.j2"
    dest: "{{ solr_installation_dir }}/{{ item.name }}/version.txt"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    mode: 0644
  with_items: '{{ solr_agents_config }}'

- name: Solr | Agent installation | Check configuration files
  set_fact:
    solr_agent_configuration: "{{ solr_agent_configuration|default([]) + [ {'name': item.0.name, 'file': item.1, 'params': item.0.params}] }}"
  with_subelements:
    - "{{ solr_agents_config }}"
    - configuration_files

- name: Solr | Agent installation | Configure the Java agent
  template:
    src: "{{ solr_agents_template_path }}/{{ item.name }}/{{ item.file }}.j2"
    dest: "{{ solr_installation_dir }}/{{ item.name }}/{{ item.file }}"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  when: agent_downloaded.changed
  notify: restart Solr
  with_items:
    - '{{ solr_agent_configuration }}'

- name: Solr | Agent installation | Check vm options
  set_fact:
    solr_agent_vm_opts: "{% set solr_agent_vm_opts = solr_agent_vm_opts|default([]) + [item.1] %}{{ solr_agent_vm_opts |list }}"
  with_subelements:
    - "{{ solr_agents_config }}"
    - vm_opts
